import * as _codemirror_state from '@codemirror/state';
import { LRLanguage, LanguageSupport } from '@codemirror/language';
import { Completion, CompletionContext, CompletionResult } from '@codemirror/autocomplete';
import { Diagnostic } from '@codemirror/lint';
import { EditorView } from '@codemirror/view';

declare const javascriptLanguage: LRLanguage;
declare const typescriptLanguage: LRLanguage;
declare const jsxLanguage: LRLanguage;
declare const tsxLanguage: LRLanguage;
declare function javascript(config?: {
    jsx?: boolean;
    typescript?: boolean;
}): LanguageSupport;
declare const autoCloseTags: _codemirror_state.Extension;

declare const snippets: readonly Completion[];

declare function esLint(eslint: any, config?: any): (view: EditorView) => Diagnostic[];

declare function localCompletionSource(context: CompletionContext): CompletionResult | null;

export { autoCloseTags, esLint, javascript, javascriptLanguage, jsxLanguage, localCompletionSource, snippets, tsxLanguage, typescriptLanguage };
